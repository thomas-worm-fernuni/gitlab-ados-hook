/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api;

import com.azure.dev.api.ApiCallback;
import com.azure.dev.api.ApiClient;
import com.azure.dev.api.ApiException;
import com.azure.dev.api.ApiResponse;
import com.azure.dev.api.Configuration;
import com.azure.dev.api.Pair;
import com.azure.dev.api.ProgressRequestBody;
import com.azure.dev.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.azure.dev.api.model.JsonPatchDocument;
import org.threeten.bp.OffsetDateTime;
import com.azure.dev.api.model.WorkItem;
import com.azure.dev.api.model.WorkItemBatchGetRequest;
import com.azure.dev.api.model.WorkItemDelete;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WorkItemsApi {
    private ApiClient localVarApiClient;

    public WorkItemsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WorkItemsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for workItemsCreate
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsCreateCall(String organization, String project, String type, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/${type}"
            .replaceAll("\\{" + "organization" + "\\}", localVarApiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "project" + "\\}", localVarApiClient.escapeString(project.toString()))
            .replaceAll("\\{" + "type" + "\\}", localVarApiClient.escapeString(type.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (validateOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("validateOnly", validateOnly));
        }

        if (bypassRules != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("bypassRules", bypassRules));
        }

        if (suppressNotifications != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("suppressNotifications", suppressNotifications));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workItemsCreateValidateBeforeCall(String organization, String project, String type, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsCreate(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsCreate(Async)");
        }
        
        // verify the required parameter 'type' is set
        if (type == null) {
            throw new ApiException("Missing the required parameter 'type' when calling workItemsCreate(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsCreate(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workItemsCreate(Async)");
        }
        

        okhttp3.Call localVarCall = workItemsCreateCall(organization, project, type, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand, _callback);
        return localVarCall;

    }

    /**
     * 
     * Creates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return WorkItem
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public WorkItem workItemsCreate(String organization, String project, String type, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand) throws ApiException {
        ApiResponse<WorkItem> localVarResp = workItemsCreateWithHttpInfo(organization, project, type, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Creates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return ApiResponse&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkItem> workItemsCreateWithHttpInfo(String organization, String project, String type, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand) throws ApiException {
        okhttp3.Call localVarCall = workItemsCreateValidateBeforeCall(organization, project, type, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand, null);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsCreateAsync(String organization, String project, String type, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand, final ApiCallback<WorkItem> _callback) throws ApiException {

        okhttp3.Call localVarCall = workItemsCreateValidateBeforeCall(organization, project, type, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand, _callback);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workItemsDelete
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id ID of the work item to be deleted (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param destroy Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsDeleteCall(String organization, Integer id, String project, String apiVersion, Boolean destroy, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/{id}"
            .replaceAll("\\{" + "organization" + "\\}", localVarApiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "id" + "\\}", localVarApiClient.escapeString(id.toString()))
            .replaceAll("\\{" + "project" + "\\}", localVarApiClient.escapeString(project.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (destroy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("destroy", destroy));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workItemsDeleteValidateBeforeCall(String organization, Integer id, String project, String apiVersion, Boolean destroy, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsDelete(Async)");
        }
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling workItemsDelete(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsDelete(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsDelete(Async)");
        }
        

        okhttp3.Call localVarCall = workItemsDeleteCall(organization, id, project, apiVersion, destroy, _callback);
        return localVarCall;

    }

    /**
     * 
     * Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id ID of the work item to be deleted (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param destroy Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone. (optional)
     * @return WorkItemDelete
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public WorkItemDelete workItemsDelete(String organization, Integer id, String project, String apiVersion, Boolean destroy) throws ApiException {
        ApiResponse<WorkItemDelete> localVarResp = workItemsDeleteWithHttpInfo(organization, id, project, apiVersion, destroy);
        return localVarResp.getData();
    }

    /**
     * 
     * Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id ID of the work item to be deleted (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param destroy Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone. (optional)
     * @return ApiResponse&lt;WorkItemDelete&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkItemDelete> workItemsDeleteWithHttpInfo(String organization, Integer id, String project, String apiVersion, Boolean destroy) throws ApiException {
        okhttp3.Call localVarCall = workItemsDeleteValidateBeforeCall(organization, id, project, apiVersion, destroy, null);
        Type localVarReturnType = new TypeToken<WorkItemDelete>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id ID of the work item to be deleted (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param destroy Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsDeleteAsync(String organization, Integer id, String project, String apiVersion, Boolean destroy, final ApiCallback<WorkItemDelete> _callback) throws ApiException {

        okhttp3.Call localVarCall = workItemsDeleteValidateBeforeCall(organization, id, project, apiVersion, destroy, _callback);
        Type localVarReturnType = new TypeToken<WorkItemDelete>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workItemsGetWorkItem
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsGetWorkItemCall(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/{id}"
            .replaceAll("\\{" + "organization" + "\\}", localVarApiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "id" + "\\}", localVarApiClient.escapeString(id.toString()))
            .replaceAll("\\{" + "project" + "\\}", localVarApiClient.escapeString(project.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (asOf != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asOf", asOf));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workItemsGetWorkItemValidateBeforeCall(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsGetWorkItem(Async)");
        }
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling workItemsGetWorkItem(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsGetWorkItem(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsGetWorkItem(Async)");
        }
        

        okhttp3.Call localVarCall = workItemsGetWorkItemCall(organization, id, project, apiVersion, fields, asOf, $expand, _callback);
        return localVarCall;

    }

    /**
     * 
     * Returns a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return WorkItem
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public WorkItem workItemsGetWorkItem(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand) throws ApiException {
        ApiResponse<WorkItem> localVarResp = workItemsGetWorkItemWithHttpInfo(organization, id, project, apiVersion, fields, asOf, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return ApiResponse&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkItem> workItemsGetWorkItemWithHttpInfo(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand) throws ApiException {
        okhttp3.Call localVarCall = workItemsGetWorkItemValidateBeforeCall(organization, id, project, apiVersion, fields, asOf, $expand, null);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsGetWorkItemAsync(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, final ApiCallback<WorkItem> _callback) throws ApiException {

        okhttp3.Call localVarCall = workItemsGetWorkItemValidateBeforeCall(organization, id, project, apiVersion, fields, asOf, $expand, _callback);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workItemsGetWorkItemTemplate
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsGetWorkItemTemplateCall(String organization, String project, String type, String apiVersion, String fields, OffsetDateTime asOf, String $expand, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/${type}"
            .replaceAll("\\{" + "organization" + "\\}", localVarApiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "project" + "\\}", localVarApiClient.escapeString(project.toString()))
            .replaceAll("\\{" + "type" + "\\}", localVarApiClient.escapeString(type.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (asOf != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asOf", asOf));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workItemsGetWorkItemTemplateValidateBeforeCall(String organization, String project, String type, String apiVersion, String fields, OffsetDateTime asOf, String $expand, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsGetWorkItemTemplate(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsGetWorkItemTemplate(Async)");
        }
        
        // verify the required parameter 'type' is set
        if (type == null) {
            throw new ApiException("Missing the required parameter 'type' when calling workItemsGetWorkItemTemplate(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsGetWorkItemTemplate(Async)");
        }
        

        okhttp3.Call localVarCall = workItemsGetWorkItemTemplateCall(organization, project, type, apiVersion, fields, asOf, $expand, _callback);
        return localVarCall;

    }

    /**
     * 
     * Returns a single work item from a template.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return WorkItem
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public WorkItem workItemsGetWorkItemTemplate(String organization, String project, String type, String apiVersion, String fields, OffsetDateTime asOf, String $expand) throws ApiException {
        ApiResponse<WorkItem> localVarResp = workItemsGetWorkItemTemplateWithHttpInfo(organization, project, type, apiVersion, fields, asOf, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a single work item from a template.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return ApiResponse&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkItem> workItemsGetWorkItemTemplateWithHttpInfo(String organization, String project, String type, String apiVersion, String fields, OffsetDateTime asOf, String $expand) throws ApiException {
        okhttp3.Call localVarCall = workItemsGetWorkItemTemplateValidateBeforeCall(organization, project, type, apiVersion, fields, asOf, $expand, null);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a single work item from a template.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param type The work item type name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsGetWorkItemTemplateAsync(String organization, String project, String type, String apiVersion, String fields, OffsetDateTime asOf, String $expand, final ApiCallback<WorkItem> _callback) throws ApiException {

        okhttp3.Call localVarCall = workItemsGetWorkItemTemplateValidateBeforeCall(organization, project, type, apiVersion, fields, asOf, $expand, _callback);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workItemsGetWorkItemsBatch
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.1&#39; to use this version of the api. (required)
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsGetWorkItemsBatchCall(String organization, String project, String apiVersion, WorkItemBatchGetRequest body, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitemsbatch"
            .replaceAll("\\{" + "organization" + "\\}", localVarApiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "project" + "\\}", localVarApiClient.escapeString(project.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workItemsGetWorkItemsBatchValidateBeforeCall(String organization, String project, String apiVersion, WorkItemBatchGetRequest body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsGetWorkItemsBatch(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsGetWorkItemsBatch(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsGetWorkItemsBatch(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workItemsGetWorkItemsBatch(Async)");
        }
        

        okhttp3.Call localVarCall = workItemsGetWorkItemsBatchCall(organization, project, apiVersion, body, _callback);
        return localVarCall;

    }

    /**
     * 
     * Gets work items for a list of work item ids (Maximum 200)
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.1&#39; to use this version of the api. (required)
     * @param body  (required)
     * @return List&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public List<WorkItem> workItemsGetWorkItemsBatch(String organization, String project, String apiVersion, WorkItemBatchGetRequest body) throws ApiException {
        ApiResponse<List<WorkItem>> localVarResp = workItemsGetWorkItemsBatchWithHttpInfo(organization, project, apiVersion, body);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets work items for a list of work item ids (Maximum 200)
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.1&#39; to use this version of the api. (required)
     * @param body  (required)
     * @return ApiResponse&lt;List&lt;WorkItem&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<WorkItem>> workItemsGetWorkItemsBatchWithHttpInfo(String organization, String project, String apiVersion, WorkItemBatchGetRequest body) throws ApiException {
        okhttp3.Call localVarCall = workItemsGetWorkItemsBatchValidateBeforeCall(organization, project, apiVersion, body, null);
        Type localVarReturnType = new TypeToken<List<WorkItem>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets work items for a list of work item ids (Maximum 200)
     * @param organization The name of the Azure DevOps organization. (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.1&#39; to use this version of the api. (required)
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsGetWorkItemsBatchAsync(String organization, String project, String apiVersion, WorkItemBatchGetRequest body, final ApiCallback<List<WorkItem>> _callback) throws ApiException {

        okhttp3.Call localVarCall = workItemsGetWorkItemsBatchValidateBeforeCall(organization, project, apiVersion, body, _callback);
        Type localVarReturnType = new TypeToken<List<WorkItem>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workItemsList
     * @param organization The name of the Azure DevOps organization. (required)
     * @param ids The comma-separated list of requested work item ids. (Maximum 200 ids allowed). (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param errorPolicy The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsListCall(String organization, String ids, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, String errorPolicy, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems"
            .replaceAll("\\{" + "organization" + "\\}", localVarApiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "project" + "\\}", localVarApiClient.escapeString(project.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ids != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ids", ids));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (asOf != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asOf", asOf));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (errorPolicy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("errorPolicy", errorPolicy));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workItemsListValidateBeforeCall(String organization, String ids, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, String errorPolicy, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsList(Async)");
        }
        
        // verify the required parameter 'ids' is set
        if (ids == null) {
            throw new ApiException("Missing the required parameter 'ids' when calling workItemsList(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsList(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsList(Async)");
        }
        

        okhttp3.Call localVarCall = workItemsListCall(organization, ids, project, apiVersion, fields, asOf, $expand, errorPolicy, _callback);
        return localVarCall;

    }

    /**
     * 
     * Returns a list of work items (Maximum 200)
     * @param organization The name of the Azure DevOps organization. (required)
     * @param ids The comma-separated list of requested work item ids. (Maximum 200 ids allowed). (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param errorPolicy The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}. (optional)
     * @return List&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public List<WorkItem> workItemsList(String organization, String ids, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, String errorPolicy) throws ApiException {
        ApiResponse<List<WorkItem>> localVarResp = workItemsListWithHttpInfo(organization, ids, project, apiVersion, fields, asOf, $expand, errorPolicy);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a list of work items (Maximum 200)
     * @param organization The name of the Azure DevOps organization. (required)
     * @param ids The comma-separated list of requested work item ids. (Maximum 200 ids allowed). (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param errorPolicy The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}. (optional)
     * @return ApiResponse&lt;List&lt;WorkItem&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<WorkItem>> workItemsListWithHttpInfo(String organization, String ids, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, String errorPolicy) throws ApiException {
        okhttp3.Call localVarCall = workItemsListValidateBeforeCall(organization, ids, project, apiVersion, fields, asOf, $expand, errorPolicy, null);
        Type localVarReturnType = new TypeToken<List<WorkItem>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a list of work items (Maximum 200)
     * @param organization The name of the Azure DevOps organization. (required)
     * @param ids The comma-separated list of requested work item ids. (Maximum 200 ids allowed). (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param errorPolicy The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsListAsync(String organization, String ids, String project, String apiVersion, String fields, OffsetDateTime asOf, String $expand, String errorPolicy, final ApiCallback<List<WorkItem>> _callback) throws ApiException {

        okhttp3.Call localVarCall = workItemsListValidateBeforeCall(organization, ids, project, apiVersion, fields, asOf, $expand, errorPolicy, _callback);
        Type localVarReturnType = new TypeToken<List<WorkItem>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for workItemsUpdate
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsUpdateCall(String organization, Integer id, String project, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/{id}"
            .replaceAll("\\{" + "organization" + "\\}", localVarApiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "id" + "\\}", localVarApiClient.escapeString(id.toString()))
            .replaceAll("\\{" + "project" + "\\}", localVarApiClient.escapeString(project.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (validateOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("validateOnly", validateOnly));
        }

        if (bypassRules != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("bypassRules", bypassRules));
        }

        if (suppressNotifications != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("suppressNotifications", suppressNotifications));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oauth2", "accessToken" };
        return localVarApiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call workItemsUpdateValidateBeforeCall(String organization, Integer id, String project, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsUpdate(Async)");
        }
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling workItemsUpdate(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsUpdate(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsUpdate(Async)");
        }
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workItemsUpdate(Async)");
        }
        

        okhttp3.Call localVarCall = workItemsUpdateCall(organization, id, project, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand, _callback);
        return localVarCall;

    }

    /**
     * 
     * Updates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return WorkItem
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public WorkItem workItemsUpdate(String organization, Integer id, String project, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand) throws ApiException {
        ApiResponse<WorkItem> localVarResp = workItemsUpdateWithHttpInfo(organization, id, project, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return ApiResponse&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WorkItem> workItemsUpdateWithHttpInfo(String organization, Integer id, String project, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand) throws ApiException {
        okhttp3.Call localVarCall = workItemsUpdateValidateBeforeCall(organization, id, project, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand, null);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param $expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call workItemsUpdateAsync(String organization, Integer id, String project, String apiVersion, JsonPatchDocument body, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String $expand, final ApiCallback<WorkItem> _callback) throws ApiException {

        okhttp3.Call localVarCall = workItemsUpdateValidateBeforeCall(organization, id, project, apiVersion, body, validateOnly, bypassRules, suppressNotifications, $expand, _callback);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
