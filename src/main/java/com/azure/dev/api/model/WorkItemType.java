/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.azure.dev.api.model.WorkItemIcon;
import com.azure.dev.api.model.WorkItemStateColor;
import com.azure.dev.api.model.WorkItemStateTransition;
import com.azure.dev.api.model.WorkItemTrackingResource;
import com.azure.dev.api.model.WorkItemTypeFieldInstance;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Describes a work item type.
 */
@ApiModel(description = "Describes a work item type.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class WorkItemType {
  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FIELD_INSTANCES = "fieldInstances";
  @SerializedName(SERIALIZED_NAME_FIELD_INSTANCES)
  private List<WorkItemTypeFieldInstance> fieldInstances = null;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<WorkItemTypeFieldInstance> fields = null;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private WorkItemIcon icon;

  public static final String SERIALIZED_NAME_IS_DISABLED = "isDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  private Boolean isDisabled;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REFERENCE_NAME = "referenceName";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NAME)
  private String referenceName;

  public static final String SERIALIZED_NAME_STATES = "states";
  @SerializedName(SERIALIZED_NAME_STATES)
  private List<WorkItemStateColor> states = null;

  public static final String SERIALIZED_NAME_TRANSITIONS = "transitions";
  @SerializedName(SERIALIZED_NAME_TRANSITIONS)
  private Map<String, List<WorkItemStateTransition>> transitions = null;

  public static final String SERIALIZED_NAME_XML_FORM = "xmlForm";
  @SerializedName(SERIALIZED_NAME_XML_FORM)
  private String xmlForm;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public WorkItemType color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * The color.
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The color.")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    this.color = color;
  }


  public WorkItemType description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the work item type.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the work item type.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public WorkItemType fieldInstances(List<WorkItemTypeFieldInstance> fieldInstances) {
    
    this.fieldInstances = fieldInstances;
    return this;
  }

  public WorkItemType addFieldInstancesItem(WorkItemTypeFieldInstance fieldInstancesItem) {
    if (this.fieldInstances == null) {
      this.fieldInstances = new ArrayList<WorkItemTypeFieldInstance>();
    }
    this.fieldInstances.add(fieldInstancesItem);
    return this;
  }

   /**
   * The fields that exist on the work item type.
   * @return fieldInstances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The fields that exist on the work item type.")

  public List<WorkItemTypeFieldInstance> getFieldInstances() {
    return fieldInstances;
  }


  public void setFieldInstances(List<WorkItemTypeFieldInstance> fieldInstances) {
    this.fieldInstances = fieldInstances;
  }


  public WorkItemType fields(List<WorkItemTypeFieldInstance> fields) {
    
    this.fields = fields;
    return this;
  }

  public WorkItemType addFieldsItem(WorkItemTypeFieldInstance fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<WorkItemTypeFieldInstance>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * The fields that exist on the work item type.
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The fields that exist on the work item type.")

  public List<WorkItemTypeFieldInstance> getFields() {
    return fields;
  }


  public void setFields(List<WorkItemTypeFieldInstance> fields) {
    this.fields = fields;
  }


  public WorkItemType icon(WorkItemIcon icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemIcon getIcon() {
    return icon;
  }


  public void setIcon(WorkItemIcon icon) {
    this.icon = icon;
  }


  public WorkItemType isDisabled(Boolean isDisabled) {
    
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * True if work item type is disabled
   * @return isDisabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if work item type is disabled")

  public Boolean getIsDisabled() {
    return isDisabled;
  }


  public void setIsDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  public WorkItemType name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Gets the name of the work item type.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gets the name of the work item type.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WorkItemType referenceName(String referenceName) {
    
    this.referenceName = referenceName;
    return this;
  }

   /**
   * The reference name of the work item type.
   * @return referenceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reference name of the work item type.")

  public String getReferenceName() {
    return referenceName;
  }


  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  public WorkItemType states(List<WorkItemStateColor> states) {
    
    this.states = states;
    return this;
  }

  public WorkItemType addStatesItem(WorkItemStateColor statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<WorkItemStateColor>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * Gets state information for the work item type.
   * @return states
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gets state information for the work item type.")

  public List<WorkItemStateColor> getStates() {
    return states;
  }


  public void setStates(List<WorkItemStateColor> states) {
    this.states = states;
  }


  public WorkItemType transitions(Map<String, List<WorkItemStateTransition>> transitions) {
    
    this.transitions = transitions;
    return this;
  }

  public WorkItemType putTransitionsItem(String key, List<WorkItemStateTransition> transitionsItem) {
    if (this.transitions == null) {
      this.transitions = new HashMap<String, List<WorkItemStateTransition>>();
    }
    this.transitions.put(key, transitionsItem);
    return this;
  }

   /**
   * Gets the various state transition mappings in the work item type.
   * @return transitions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gets the various state transition mappings in the work item type.")

  public Map<String, List<WorkItemStateTransition>> getTransitions() {
    return transitions;
  }


  public void setTransitions(Map<String, List<WorkItemStateTransition>> transitions) {
    this.transitions = transitions;
  }


  public WorkItemType xmlForm(String xmlForm) {
    
    this.xmlForm = xmlForm;
    return this;
  }

   /**
   * The XML form.
   * @return xmlForm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The XML form.")

  public String getXmlForm() {
    return xmlForm;
  }


  public void setXmlForm(String xmlForm) {
    this.xmlForm = xmlForm;
  }


  public WorkItemType url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemType workItemType = (WorkItemType) o;
    return Objects.equals(this.color, workItemType.color) &&
        Objects.equals(this.description, workItemType.description) &&
        Objects.equals(this.fieldInstances, workItemType.fieldInstances) &&
        Objects.equals(this.fields, workItemType.fields) &&
        Objects.equals(this.icon, workItemType.icon) &&
        Objects.equals(this.isDisabled, workItemType.isDisabled) &&
        Objects.equals(this.name, workItemType.name) &&
        Objects.equals(this.referenceName, workItemType.referenceName) &&
        Objects.equals(this.states, workItemType.states) &&
        Objects.equals(this.transitions, workItemType.transitions) &&
        Objects.equals(this.xmlForm, workItemType.xmlForm) &&
        Objects.equals(this.url, workItemType.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, description, fieldInstances, fields, icon, isDisabled, name, referenceName, states, transitions, xmlForm, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemType {\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fieldInstances: ").append(toIndentedString(fieldInstances)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    transitions: ").append(toIndentedString(transitions)).append("\n");
    sb.append("    xmlForm: ").append(toIndentedString(xmlForm)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

