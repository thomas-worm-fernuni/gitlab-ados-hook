/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.azure.dev.api.model.WorkItemTrackingResource;
import com.azure.dev.api.model.WorkItemTypeReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Describes a work item type category.
 */
@ApiModel(description = "Describes a work item type category.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class WorkItemTypeCategory {
  public static final String SERIALIZED_NAME_DEFAULT_WORK_ITEM_TYPE = "defaultWorkItemType";
  @SerializedName(SERIALIZED_NAME_DEFAULT_WORK_ITEM_TYPE)
  private WorkItemTypeReference defaultWorkItemType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_REFERENCE_NAME = "referenceName";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NAME)
  private String referenceName;

  public static final String SERIALIZED_NAME_WORK_ITEM_TYPES = "workItemTypes";
  @SerializedName(SERIALIZED_NAME_WORK_ITEM_TYPES)
  private List<WorkItemTypeReference> workItemTypes = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public WorkItemTypeCategory defaultWorkItemType(WorkItemTypeReference defaultWorkItemType) {
    
    this.defaultWorkItemType = defaultWorkItemType;
    return this;
  }

   /**
   * Get defaultWorkItemType
   * @return defaultWorkItemType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemTypeReference getDefaultWorkItemType() {
    return defaultWorkItemType;
  }


  public void setDefaultWorkItemType(WorkItemTypeReference defaultWorkItemType) {
    this.defaultWorkItemType = defaultWorkItemType;
  }


  public WorkItemTypeCategory name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the category.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the category.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public WorkItemTypeCategory referenceName(String referenceName) {
    
    this.referenceName = referenceName;
    return this;
  }

   /**
   * The reference name of the category.
   * @return referenceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reference name of the category.")

  public String getReferenceName() {
    return referenceName;
  }


  public void setReferenceName(String referenceName) {
    this.referenceName = referenceName;
  }


  public WorkItemTypeCategory workItemTypes(List<WorkItemTypeReference> workItemTypes) {
    
    this.workItemTypes = workItemTypes;
    return this;
  }

  public WorkItemTypeCategory addWorkItemTypesItem(WorkItemTypeReference workItemTypesItem) {
    if (this.workItemTypes == null) {
      this.workItemTypes = new ArrayList<WorkItemTypeReference>();
    }
    this.workItemTypes.add(workItemTypesItem);
    return this;
  }

   /**
   * The work item types that belong to the category.
   * @return workItemTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The work item types that belong to the category.")

  public List<WorkItemTypeReference> getWorkItemTypes() {
    return workItemTypes;
  }


  public void setWorkItemTypes(List<WorkItemTypeReference> workItemTypes) {
    this.workItemTypes = workItemTypes;
  }


  public WorkItemTypeCategory url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemTypeCategory workItemTypeCategory = (WorkItemTypeCategory) o;
    return Objects.equals(this.defaultWorkItemType, workItemTypeCategory.defaultWorkItemType) &&
        Objects.equals(this.name, workItemTypeCategory.name) &&
        Objects.equals(this.referenceName, workItemTypeCategory.referenceName) &&
        Objects.equals(this.workItemTypes, workItemTypeCategory.workItemTypes) &&
        Objects.equals(this.url, workItemTypeCategory.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultWorkItemType, name, referenceName, workItemTypes, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemTypeCategory {\n");
    sb.append("    defaultWorkItemType: ").append(toIndentedString(defaultWorkItemType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    workItemTypes: ").append(toIndentedString(workItemTypes)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

