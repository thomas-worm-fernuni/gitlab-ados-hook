/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * The Team Context for an operation.
 */
@ApiModel(description = "The Team Context for an operation.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class TeamContext {
  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private UUID projectId;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TEAM_ID = "teamId";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private UUID teamId;


  public TeamContext project(String project) {
    
    this.project = project;
    return this;
  }

   /**
   * The team project Id or name.  Ignored if ProjectId is set.
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The team project Id or name.  Ignored if ProjectId is set.")

  public String getProject() {
    return project;
  }


  public void setProject(String project) {
    this.project = project;
  }


  public TeamContext projectId(UUID projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * The Team Project ID.  Required if Project is not set.
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Team Project ID.  Required if Project is not set.")

  public UUID getProjectId() {
    return projectId;
  }


  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public TeamContext team(String team) {
    
    this.team = team;
    return this;
  }

   /**
   * The Team Id or name.  Ignored if TeamId is set.
   * @return team
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Team Id or name.  Ignored if TeamId is set.")

  public String getTeam() {
    return team;
  }


  public void setTeam(String team) {
    this.team = team;
  }


  public TeamContext teamId(UUID teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * The Team Id
   * @return teamId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Team Id")

  public UUID getTeamId() {
    return teamId;
  }


  public void setTeamId(UUID teamId) {
    this.teamId = teamId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TeamContext teamContext = (TeamContext) o;
    return Objects.equals(this.project, teamContext.project) &&
        Objects.equals(this.projectId, teamContext.projectId) &&
        Objects.equals(this.team, teamContext.team) &&
        Objects.equals(this.teamId, teamContext.teamId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, projectId, team, teamId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TeamContext {\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

