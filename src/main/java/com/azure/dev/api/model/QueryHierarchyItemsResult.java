/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.azure.dev.api.model.QueryHierarchyItem;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class QueryHierarchyItemsResult {
  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_HAS_MORE = "hasMore";
  @SerializedName(SERIALIZED_NAME_HAS_MORE)
  private Boolean hasMore;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private List<QueryHierarchyItem> value = null;


  public QueryHierarchyItemsResult count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * The count of items.
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The count of items.")

  public Integer getCount() {
    return count;
  }


  public void setCount(Integer count) {
    this.count = count;
  }


  public QueryHierarchyItemsResult hasMore(Boolean hasMore) {
    
    this.hasMore = hasMore;
    return this;
  }

   /**
   * Indicates if the max return limit was hit but there are still more items
   * @return hasMore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the max return limit was hit but there are still more items")

  public Boolean getHasMore() {
    return hasMore;
  }


  public void setHasMore(Boolean hasMore) {
    this.hasMore = hasMore;
  }


  public QueryHierarchyItemsResult value(List<QueryHierarchyItem> value) {
    
    this.value = value;
    return this;
  }

  public QueryHierarchyItemsResult addValueItem(QueryHierarchyItem valueItem) {
    if (this.value == null) {
      this.value = new ArrayList<QueryHierarchyItem>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * The list of items
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of items")

  public List<QueryHierarchyItem> getValue() {
    return value;
  }


  public void setValue(List<QueryHierarchyItem> value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryHierarchyItemsResult queryHierarchyItemsResult = (QueryHierarchyItemsResult) o;
    return Objects.equals(this.count, queryHierarchyItemsResult.count) &&
        Objects.equals(this.hasMore, queryHierarchyItemsResult.hasMore) &&
        Objects.equals(this.value, queryHierarchyItemsResult.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, hasMore, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryHierarchyItemsResult {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    hasMore: ").append(toIndentedString(hasMore)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

