/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.azure.dev.api.model.AccountRecentActivityWorkItemModelBase;
import com.azure.dev.api.model.IdentityRef;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Represents Work Item Recent Activity
 */
@ApiModel(description = "Represents Work Item Recent Activity")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class AccountRecentActivityWorkItemModel2 {
  public static final String SERIALIZED_NAME_ASSIGNED_TO = "assignedTo";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_TO)
  private IdentityRef assignedTo;

  public static final String SERIALIZED_NAME_ACTIVITY_DATE = "activityDate";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_DATE)
  private OffsetDateTime activityDate;

  /**
   * Type of the activity
   */
  @JsonAdapter(ActivityTypeEnum.Adapter.class)
  public enum ActivityTypeEnum {
    VISITED("visited"),
    
    EDITED("edited"),
    
    DELETED("deleted"),
    
    RESTORED("restored");

    private String value;

    ActivityTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ActivityTypeEnum fromValue(String value) {
      for (ActivityTypeEnum b : ActivityTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ActivityTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActivityTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActivityTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ActivityTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ACTIVITY_TYPE = "activityType";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_TYPE)
  private ActivityTypeEnum activityType;

  public static final String SERIALIZED_NAME_CHANGED_DATE = "changedDate";
  @SerializedName(SERIALIZED_NAME_CHANGED_DATE)
  private OffsetDateTime changedDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IDENTITY_ID = "identityId";
  @SerializedName(SERIALIZED_NAME_IDENTITY_ID)
  private UUID identityId;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_TEAM_PROJECT = "teamProject";
  @SerializedName(SERIALIZED_NAME_TEAM_PROJECT)
  private String teamProject;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_WORK_ITEM_TYPE = "workItemType";
  @SerializedName(SERIALIZED_NAME_WORK_ITEM_TYPE)
  private String workItemType;


  public AccountRecentActivityWorkItemModel2 assignedTo(IdentityRef assignedTo) {
    
    this.assignedTo = assignedTo;
    return this;
  }

   /**
   * Get assignedTo
   * @return assignedTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IdentityRef getAssignedTo() {
    return assignedTo;
  }


  public void setAssignedTo(IdentityRef assignedTo) {
    this.assignedTo = assignedTo;
  }


  public AccountRecentActivityWorkItemModel2 activityDate(OffsetDateTime activityDate) {
    
    this.activityDate = activityDate;
    return this;
  }

   /**
   * Date of the last Activity by the user
   * @return activityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the last Activity by the user")

  public OffsetDateTime getActivityDate() {
    return activityDate;
  }


  public void setActivityDate(OffsetDateTime activityDate) {
    this.activityDate = activityDate;
  }


  public AccountRecentActivityWorkItemModel2 activityType(ActivityTypeEnum activityType) {
    
    this.activityType = activityType;
    return this;
  }

   /**
   * Type of the activity
   * @return activityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of the activity")

  public ActivityTypeEnum getActivityType() {
    return activityType;
  }


  public void setActivityType(ActivityTypeEnum activityType) {
    this.activityType = activityType;
  }


  public AccountRecentActivityWorkItemModel2 changedDate(OffsetDateTime changedDate) {
    
    this.changedDate = changedDate;
    return this;
  }

   /**
   * Last changed date of the work item
   * @return changedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last changed date of the work item")

  public OffsetDateTime getChangedDate() {
    return changedDate;
  }


  public void setChangedDate(OffsetDateTime changedDate) {
    this.changedDate = changedDate;
  }


  public AccountRecentActivityWorkItemModel2 id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Work Item Id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Work Item Id")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public AccountRecentActivityWorkItemModel2 identityId(UUID identityId) {
    
    this.identityId = identityId;
    return this;
  }

   /**
   * TeamFoundationId of the user this activity belongs to
   * @return identityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TeamFoundationId of the user this activity belongs to")

  public UUID getIdentityId() {
    return identityId;
  }


  public void setIdentityId(UUID identityId) {
    this.identityId = identityId;
  }


  public AccountRecentActivityWorkItemModel2 state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * State of the work item
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "State of the work item")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public AccountRecentActivityWorkItemModel2 teamProject(String teamProject) {
    
    this.teamProject = teamProject;
    return this;
  }

   /**
   * Team project the work item belongs to
   * @return teamProject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Team project the work item belongs to")

  public String getTeamProject() {
    return teamProject;
  }


  public void setTeamProject(String teamProject) {
    this.teamProject = teamProject;
  }


  public AccountRecentActivityWorkItemModel2 title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title of the work item
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Title of the work item")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public AccountRecentActivityWorkItemModel2 workItemType(String workItemType) {
    
    this.workItemType = workItemType;
    return this;
  }

   /**
   * Type of Work Item
   * @return workItemType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of Work Item")

  public String getWorkItemType() {
    return workItemType;
  }


  public void setWorkItemType(String workItemType) {
    this.workItemType = workItemType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountRecentActivityWorkItemModel2 accountRecentActivityWorkItemModel2 = (AccountRecentActivityWorkItemModel2) o;
    return Objects.equals(this.assignedTo, accountRecentActivityWorkItemModel2.assignedTo) &&
        Objects.equals(this.activityDate, accountRecentActivityWorkItemModel2.activityDate) &&
        Objects.equals(this.activityType, accountRecentActivityWorkItemModel2.activityType) &&
        Objects.equals(this.changedDate, accountRecentActivityWorkItemModel2.changedDate) &&
        Objects.equals(this.id, accountRecentActivityWorkItemModel2.id) &&
        Objects.equals(this.identityId, accountRecentActivityWorkItemModel2.identityId) &&
        Objects.equals(this.state, accountRecentActivityWorkItemModel2.state) &&
        Objects.equals(this.teamProject, accountRecentActivityWorkItemModel2.teamProject) &&
        Objects.equals(this.title, accountRecentActivityWorkItemModel2.title) &&
        Objects.equals(this.workItemType, accountRecentActivityWorkItemModel2.workItemType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignedTo, activityDate, activityType, changedDate, id, identityId, state, teamProject, title, workItemType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountRecentActivityWorkItemModel2 {\n");
    sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
    sb.append("    activityDate: ").append(toIndentedString(activityDate)).append("\n");
    sb.append("    activityType: ").append(toIndentedString(activityType)).append("\n");
    sb.append("    changedDate: ").append(toIndentedString(changedDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityId: ").append(toIndentedString(identityId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    teamProject: ").append(toIndentedString(teamProject)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    workItemType: ").append(toIndentedString(workItemType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

