/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.azure.dev.api.model.IdentityReference;
import com.azure.dev.api.model.QueryHierarchyItem;
import com.azure.dev.api.model.WorkItemFieldReference;
import com.azure.dev.api.model.WorkItemQueryClause;
import com.azure.dev.api.model.WorkItemQuerySortColumn;
import com.azure.dev.api.model.WorkItemTrackingResource;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Represents an item in the work item query hierarchy. This can be either a query or a folder.
 */
@ApiModel(description = "Represents an item in the work item query hierarchy. This can be either a query or a folder.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class QueryHierarchyItem {
  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private List<QueryHierarchyItem> children = null;

  public static final String SERIALIZED_NAME_CLAUSES = "clauses";
  @SerializedName(SERIALIZED_NAME_CLAUSES)
  private WorkItemQueryClause clauses;

  public static final String SERIALIZED_NAME_COLUMNS = "columns";
  @SerializedName(SERIALIZED_NAME_COLUMNS)
  private List<WorkItemFieldReference> columns = null;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private IdentityReference createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  /**
   * The link query mode.
   */
  @JsonAdapter(FilterOptionsEnum.Adapter.class)
  public enum FilterOptionsEnum {
    WORKITEMS("workItems"),
    
    LINKSONEHOPMUSTCONTAIN("linksOneHopMustContain"),
    
    LINKSONEHOPMAYCONTAIN("linksOneHopMayContain"),
    
    LINKSONEHOPDOESNOTCONTAIN("linksOneHopDoesNotContain"),
    
    LINKSRECURSIVEMUSTCONTAIN("linksRecursiveMustContain"),
    
    LINKSRECURSIVEMAYCONTAIN("linksRecursiveMayContain"),
    
    LINKSRECURSIVEDOESNOTCONTAIN("linksRecursiveDoesNotContain");

    private String value;

    FilterOptionsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FilterOptionsEnum fromValue(String value) {
      for (FilterOptionsEnum b : FilterOptionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FilterOptionsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FilterOptionsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FilterOptionsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FilterOptionsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FILTER_OPTIONS = "filterOptions";
  @SerializedName(SERIALIZED_NAME_FILTER_OPTIONS)
  private FilterOptionsEnum filterOptions;

  public static final String SERIALIZED_NAME_HAS_CHILDREN = "hasChildren";
  @SerializedName(SERIALIZED_NAME_HAS_CHILDREN)
  private Boolean hasChildren;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_IS_FOLDER = "isFolder";
  @SerializedName(SERIALIZED_NAME_IS_FOLDER)
  private Boolean isFolder;

  public static final String SERIALIZED_NAME_IS_INVALID_SYNTAX = "isInvalidSyntax";
  @SerializedName(SERIALIZED_NAME_IS_INVALID_SYNTAX)
  private Boolean isInvalidSyntax;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "isPublic";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_LAST_EXECUTED_BY = "lastExecutedBy";
  @SerializedName(SERIALIZED_NAME_LAST_EXECUTED_BY)
  private IdentityReference lastExecutedBy;

  public static final String SERIALIZED_NAME_LAST_EXECUTED_DATE = "lastExecutedDate";
  @SerializedName(SERIALIZED_NAME_LAST_EXECUTED_DATE)
  private OffsetDateTime lastExecutedDate;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "lastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private IdentityReference lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "lastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private OffsetDateTime lastModifiedDate;

  public static final String SERIALIZED_NAME_LINK_CLAUSES = "linkClauses";
  @SerializedName(SERIALIZED_NAME_LINK_CLAUSES)
  private WorkItemQueryClause linkClauses;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  /**
   * The recursion option for use in a tree query.
   */
  @JsonAdapter(QueryRecursionOptionEnum.Adapter.class)
  public enum QueryRecursionOptionEnum {
    PARENTFIRST("parentFirst"),
    
    CHILDFIRST("childFirst");

    private String value;

    QueryRecursionOptionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QueryRecursionOptionEnum fromValue(String value) {
      for (QueryRecursionOptionEnum b : QueryRecursionOptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<QueryRecursionOptionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QueryRecursionOptionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QueryRecursionOptionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return QueryRecursionOptionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_QUERY_RECURSION_OPTION = "queryRecursionOption";
  @SerializedName(SERIALIZED_NAME_QUERY_RECURSION_OPTION)
  private QueryRecursionOptionEnum queryRecursionOption;

  /**
   * The type of query.
   */
  @JsonAdapter(QueryTypeEnum.Adapter.class)
  public enum QueryTypeEnum {
    FLAT("flat"),
    
    TREE("tree"),
    
    ONEHOP("oneHop");

    private String value;

    QueryTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QueryTypeEnum fromValue(String value) {
      for (QueryTypeEnum b : QueryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<QueryTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QueryTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QueryTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return QueryTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_QUERY_TYPE = "queryType";
  @SerializedName(SERIALIZED_NAME_QUERY_TYPE)
  private QueryTypeEnum queryType;

  public static final String SERIALIZED_NAME_SORT_COLUMNS = "sortColumns";
  @SerializedName(SERIALIZED_NAME_SORT_COLUMNS)
  private List<WorkItemQuerySortColumn> sortColumns = null;

  public static final String SERIALIZED_NAME_SOURCE_CLAUSES = "sourceClauses";
  @SerializedName(SERIALIZED_NAME_SOURCE_CLAUSES)
  private WorkItemQueryClause sourceClauses;

  public static final String SERIALIZED_NAME_TARGET_CLAUSES = "targetClauses";
  @SerializedName(SERIALIZED_NAME_TARGET_CLAUSES)
  private WorkItemQueryClause targetClauses;

  public static final String SERIALIZED_NAME_WIQL = "wiql";
  @SerializedName(SERIALIZED_NAME_WIQL)
  private String wiql;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public QueryHierarchyItem children(List<QueryHierarchyItem> children) {
    
    this.children = children;
    return this;
  }

  public QueryHierarchyItem addChildrenItem(QueryHierarchyItem childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<QueryHierarchyItem>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * The child query items inside a query folder.
   * @return children
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The child query items inside a query folder.")

  public List<QueryHierarchyItem> getChildren() {
    return children;
  }


  public void setChildren(List<QueryHierarchyItem> children) {
    this.children = children;
  }


  public QueryHierarchyItem clauses(WorkItemQueryClause clauses) {
    
    this.clauses = clauses;
    return this;
  }

   /**
   * Get clauses
   * @return clauses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemQueryClause getClauses() {
    return clauses;
  }


  public void setClauses(WorkItemQueryClause clauses) {
    this.clauses = clauses;
  }


  public QueryHierarchyItem columns(List<WorkItemFieldReference> columns) {
    
    this.columns = columns;
    return this;
  }

  public QueryHierarchyItem addColumnsItem(WorkItemFieldReference columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<WorkItemFieldReference>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * The columns of the query.
   * @return columns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The columns of the query.")

  public List<WorkItemFieldReference> getColumns() {
    return columns;
  }


  public void setColumns(List<WorkItemFieldReference> columns) {
    this.columns = columns;
  }


  public QueryHierarchyItem createdBy(IdentityReference createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IdentityReference getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(IdentityReference createdBy) {
    this.createdBy = createdBy;
  }


  public QueryHierarchyItem createdDate(OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * When the query item was created.
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When the query item was created.")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public QueryHierarchyItem filterOptions(FilterOptionsEnum filterOptions) {
    
    this.filterOptions = filterOptions;
    return this;
  }

   /**
   * The link query mode.
   * @return filterOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The link query mode.")

  public FilterOptionsEnum getFilterOptions() {
    return filterOptions;
  }


  public void setFilterOptions(FilterOptionsEnum filterOptions) {
    this.filterOptions = filterOptions;
  }


  public QueryHierarchyItem hasChildren(Boolean hasChildren) {
    
    this.hasChildren = hasChildren;
    return this;
  }

   /**
   * If this is a query folder, indicates if it contains any children.
   * @return hasChildren
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this is a query folder, indicates if it contains any children.")

  public Boolean getHasChildren() {
    return hasChildren;
  }


  public void setHasChildren(Boolean hasChildren) {
    this.hasChildren = hasChildren;
  }


  public QueryHierarchyItem id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the query item.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the query item.")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public QueryHierarchyItem isDeleted(Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Indicates if this query item is deleted. Setting this to false on a deleted query item will undelete it. Undeleting a query or folder will not bring back the permission changes that were previously applied to it.
   * @return isDeleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this query item is deleted. Setting this to false on a deleted query item will undelete it. Undeleting a query or folder will not bring back the permission changes that were previously applied to it.")

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public QueryHierarchyItem isFolder(Boolean isFolder) {
    
    this.isFolder = isFolder;
    return this;
  }

   /**
   * Indicates if this is a query folder or a query.
   * @return isFolder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this is a query folder or a query.")

  public Boolean getIsFolder() {
    return isFolder;
  }


  public void setIsFolder(Boolean isFolder) {
    this.isFolder = isFolder;
  }


  public QueryHierarchyItem isInvalidSyntax(Boolean isInvalidSyntax) {
    
    this.isInvalidSyntax = isInvalidSyntax;
    return this;
  }

   /**
   * Indicates if the WIQL of this query is invalid. This could be due to invalid syntax or a no longer valid area/iteration path.
   * @return isInvalidSyntax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the WIQL of this query is invalid. This could be due to invalid syntax or a no longer valid area/iteration path.")

  public Boolean getIsInvalidSyntax() {
    return isInvalidSyntax;
  }


  public void setIsInvalidSyntax(Boolean isInvalidSyntax) {
    this.isInvalidSyntax = isInvalidSyntax;
  }


  public QueryHierarchyItem isPublic(Boolean isPublic) {
    
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Indicates if this query item is public or private.
   * @return isPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this query item is public or private.")

  public Boolean getIsPublic() {
    return isPublic;
  }


  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public QueryHierarchyItem lastExecutedBy(IdentityReference lastExecutedBy) {
    
    this.lastExecutedBy = lastExecutedBy;
    return this;
  }

   /**
   * Get lastExecutedBy
   * @return lastExecutedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IdentityReference getLastExecutedBy() {
    return lastExecutedBy;
  }


  public void setLastExecutedBy(IdentityReference lastExecutedBy) {
    this.lastExecutedBy = lastExecutedBy;
  }


  public QueryHierarchyItem lastExecutedDate(OffsetDateTime lastExecutedDate) {
    
    this.lastExecutedDate = lastExecutedDate;
    return this;
  }

   /**
   * When the query was last run.
   * @return lastExecutedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When the query was last run.")

  public OffsetDateTime getLastExecutedDate() {
    return lastExecutedDate;
  }


  public void setLastExecutedDate(OffsetDateTime lastExecutedDate) {
    this.lastExecutedDate = lastExecutedDate;
  }


  public QueryHierarchyItem lastModifiedBy(IdentityReference lastModifiedBy) {
    
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Get lastModifiedBy
   * @return lastModifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IdentityReference getLastModifiedBy() {
    return lastModifiedBy;
  }


  public void setLastModifiedBy(IdentityReference lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public QueryHierarchyItem lastModifiedDate(OffsetDateTime lastModifiedDate) {
    
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

   /**
   * When the query item was last modified.
   * @return lastModifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When the query item was last modified.")

  public OffsetDateTime getLastModifiedDate() {
    return lastModifiedDate;
  }


  public void setLastModifiedDate(OffsetDateTime lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public QueryHierarchyItem linkClauses(WorkItemQueryClause linkClauses) {
    
    this.linkClauses = linkClauses;
    return this;
  }

   /**
   * Get linkClauses
   * @return linkClauses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemQueryClause getLinkClauses() {
    return linkClauses;
  }


  public void setLinkClauses(WorkItemQueryClause linkClauses) {
    this.linkClauses = linkClauses;
  }


  public QueryHierarchyItem name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the query item.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the query item.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public QueryHierarchyItem path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * The path of the query item.
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path of the query item.")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public QueryHierarchyItem queryRecursionOption(QueryRecursionOptionEnum queryRecursionOption) {
    
    this.queryRecursionOption = queryRecursionOption;
    return this;
  }

   /**
   * The recursion option for use in a tree query.
   * @return queryRecursionOption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The recursion option for use in a tree query.")

  public QueryRecursionOptionEnum getQueryRecursionOption() {
    return queryRecursionOption;
  }


  public void setQueryRecursionOption(QueryRecursionOptionEnum queryRecursionOption) {
    this.queryRecursionOption = queryRecursionOption;
  }


  public QueryHierarchyItem queryType(QueryTypeEnum queryType) {
    
    this.queryType = queryType;
    return this;
  }

   /**
   * The type of query.
   * @return queryType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of query.")

  public QueryTypeEnum getQueryType() {
    return queryType;
  }


  public void setQueryType(QueryTypeEnum queryType) {
    this.queryType = queryType;
  }


  public QueryHierarchyItem sortColumns(List<WorkItemQuerySortColumn> sortColumns) {
    
    this.sortColumns = sortColumns;
    return this;
  }

  public QueryHierarchyItem addSortColumnsItem(WorkItemQuerySortColumn sortColumnsItem) {
    if (this.sortColumns == null) {
      this.sortColumns = new ArrayList<WorkItemQuerySortColumn>();
    }
    this.sortColumns.add(sortColumnsItem);
    return this;
  }

   /**
   * The sort columns of the query.
   * @return sortColumns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sort columns of the query.")

  public List<WorkItemQuerySortColumn> getSortColumns() {
    return sortColumns;
  }


  public void setSortColumns(List<WorkItemQuerySortColumn> sortColumns) {
    this.sortColumns = sortColumns;
  }


  public QueryHierarchyItem sourceClauses(WorkItemQueryClause sourceClauses) {
    
    this.sourceClauses = sourceClauses;
    return this;
  }

   /**
   * Get sourceClauses
   * @return sourceClauses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemQueryClause getSourceClauses() {
    return sourceClauses;
  }


  public void setSourceClauses(WorkItemQueryClause sourceClauses) {
    this.sourceClauses = sourceClauses;
  }


  public QueryHierarchyItem targetClauses(WorkItemQueryClause targetClauses) {
    
    this.targetClauses = targetClauses;
    return this;
  }

   /**
   * Get targetClauses
   * @return targetClauses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemQueryClause getTargetClauses() {
    return targetClauses;
  }


  public void setTargetClauses(WorkItemQueryClause targetClauses) {
    this.targetClauses = targetClauses;
  }


  public QueryHierarchyItem wiql(String wiql) {
    
    this.wiql = wiql;
    return this;
  }

   /**
   * The WIQL text of the query
   * @return wiql
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The WIQL text of the query")

  public String getWiql() {
    return wiql;
  }


  public void setWiql(String wiql) {
    this.wiql = wiql;
  }


  public QueryHierarchyItem url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryHierarchyItem queryHierarchyItem = (QueryHierarchyItem) o;
    return Objects.equals(this.children, queryHierarchyItem.children) &&
        Objects.equals(this.clauses, queryHierarchyItem.clauses) &&
        Objects.equals(this.columns, queryHierarchyItem.columns) &&
        Objects.equals(this.createdBy, queryHierarchyItem.createdBy) &&
        Objects.equals(this.createdDate, queryHierarchyItem.createdDate) &&
        Objects.equals(this.filterOptions, queryHierarchyItem.filterOptions) &&
        Objects.equals(this.hasChildren, queryHierarchyItem.hasChildren) &&
        Objects.equals(this.id, queryHierarchyItem.id) &&
        Objects.equals(this.isDeleted, queryHierarchyItem.isDeleted) &&
        Objects.equals(this.isFolder, queryHierarchyItem.isFolder) &&
        Objects.equals(this.isInvalidSyntax, queryHierarchyItem.isInvalidSyntax) &&
        Objects.equals(this.isPublic, queryHierarchyItem.isPublic) &&
        Objects.equals(this.lastExecutedBy, queryHierarchyItem.lastExecutedBy) &&
        Objects.equals(this.lastExecutedDate, queryHierarchyItem.lastExecutedDate) &&
        Objects.equals(this.lastModifiedBy, queryHierarchyItem.lastModifiedBy) &&
        Objects.equals(this.lastModifiedDate, queryHierarchyItem.lastModifiedDate) &&
        Objects.equals(this.linkClauses, queryHierarchyItem.linkClauses) &&
        Objects.equals(this.name, queryHierarchyItem.name) &&
        Objects.equals(this.path, queryHierarchyItem.path) &&
        Objects.equals(this.queryRecursionOption, queryHierarchyItem.queryRecursionOption) &&
        Objects.equals(this.queryType, queryHierarchyItem.queryType) &&
        Objects.equals(this.sortColumns, queryHierarchyItem.sortColumns) &&
        Objects.equals(this.sourceClauses, queryHierarchyItem.sourceClauses) &&
        Objects.equals(this.targetClauses, queryHierarchyItem.targetClauses) &&
        Objects.equals(this.wiql, queryHierarchyItem.wiql) &&
        Objects.equals(this.url, queryHierarchyItem.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(children, clauses, columns, createdBy, createdDate, filterOptions, hasChildren, id, isDeleted, isFolder, isInvalidSyntax, isPublic, lastExecutedBy, lastExecutedDate, lastModifiedBy, lastModifiedDate, linkClauses, name, path, queryRecursionOption, queryType, sortColumns, sourceClauses, targetClauses, wiql, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryHierarchyItem {\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    clauses: ").append(toIndentedString(clauses)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    filterOptions: ").append(toIndentedString(filterOptions)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    isFolder: ").append(toIndentedString(isFolder)).append("\n");
    sb.append("    isInvalidSyntax: ").append(toIndentedString(isInvalidSyntax)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    lastExecutedBy: ").append(toIndentedString(lastExecutedBy)).append("\n");
    sb.append("    lastExecutedDate: ").append(toIndentedString(lastExecutedDate)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    linkClauses: ").append(toIndentedString(linkClauses)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    queryRecursionOption: ").append(toIndentedString(queryRecursionOption)).append("\n");
    sb.append("    queryType: ").append(toIndentedString(queryType)).append("\n");
    sb.append("    sortColumns: ").append(toIndentedString(sortColumns)).append("\n");
    sb.append("    sourceClauses: ").append(toIndentedString(sourceClauses)).append("\n");
    sb.append("    targetClauses: ").append(toIndentedString(targetClauses)).append("\n");
    sb.append("    wiql: ").append(toIndentedString(wiql)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

