/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.azure.dev.api.model.ReferenceLinks;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class GraphSubjectBase {
  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private ReferenceLinks links;

  public static final String SERIALIZED_NAME_DESCRIPTOR = "descriptor";
  @SerializedName(SERIALIZED_NAME_DESCRIPTOR)
  private String descriptor;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public GraphSubjectBase links(ReferenceLinks links) {
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReferenceLinks getLinks() {
    return links;
  }


  public void setLinks(ReferenceLinks links) {
    this.links = links;
  }


  public GraphSubjectBase descriptor(String descriptor) {
    
    this.descriptor = descriptor;
    return this;
  }

   /**
   * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.
   * @return descriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.")

  public String getDescriptor() {
    return descriptor;
  }


  public void setDescriptor(String descriptor) {
    this.descriptor = descriptor;
  }


  public GraphSubjectBase displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GraphSubjectBase url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * This url is the full route to the source resource of this graph subject.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This url is the full route to the source resource of this graph subject.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GraphSubjectBase graphSubjectBase = (GraphSubjectBase) o;
    return Objects.equals(this.links, graphSubjectBase.links) &&
        Objects.equals(this.descriptor, graphSubjectBase.descriptor) &&
        Objects.equals(this.displayName, graphSubjectBase.displayName) &&
        Objects.equals(this.url, graphSubjectBase.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, descriptor, displayName, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GraphSubjectBase {\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

