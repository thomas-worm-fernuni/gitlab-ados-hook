/*
 * WorkItemTracking
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.azure.dev.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.azure.dev.api.model.WorkItemFieldOperation;
import com.azure.dev.api.model.WorkItemFieldReference;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a clause in a work item query. This shows the structure of a work item query.
 */
@ApiModel(description = "Represents a clause in a work item query. This shows the structure of a work item query.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-21T10:09:21.598267402Z[Etc/UTC]")
public class WorkItemQueryClause {
  public static final String SERIALIZED_NAME_CLAUSES = "clauses";
  @SerializedName(SERIALIZED_NAME_CLAUSES)
  private List<WorkItemQueryClause> clauses = null;

  public static final String SERIALIZED_NAME_FIELD = "field";
  @SerializedName(SERIALIZED_NAME_FIELD)
  private WorkItemFieldReference field;

  public static final String SERIALIZED_NAME_FIELD_VALUE = "fieldValue";
  @SerializedName(SERIALIZED_NAME_FIELD_VALUE)
  private WorkItemFieldReference fieldValue;

  public static final String SERIALIZED_NAME_IS_FIELD_VALUE = "isFieldValue";
  @SerializedName(SERIALIZED_NAME_IS_FIELD_VALUE)
  private Boolean isFieldValue;

  /**
   * Logical operator separating the condition clause
   */
  @JsonAdapter(LogicalOperatorEnum.Adapter.class)
  public enum LogicalOperatorEnum {
    NONE("none"),
    
    AND("and"),
    
    OR("or");

    private String value;

    LogicalOperatorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LogicalOperatorEnum fromValue(String value) {
      for (LogicalOperatorEnum b : LogicalOperatorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LogicalOperatorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogicalOperatorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogicalOperatorEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LogicalOperatorEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LOGICAL_OPERATOR = "logicalOperator";
  @SerializedName(SERIALIZED_NAME_LOGICAL_OPERATOR)
  private LogicalOperatorEnum logicalOperator;

  public static final String SERIALIZED_NAME_OPERATOR = "operator";
  @SerializedName(SERIALIZED_NAME_OPERATOR)
  private WorkItemFieldOperation operator;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;


  public WorkItemQueryClause clauses(List<WorkItemQueryClause> clauses) {
    
    this.clauses = clauses;
    return this;
  }

  public WorkItemQueryClause addClausesItem(WorkItemQueryClause clausesItem) {
    if (this.clauses == null) {
      this.clauses = new ArrayList<WorkItemQueryClause>();
    }
    this.clauses.add(clausesItem);
    return this;
  }

   /**
   * Child clauses if the current clause is a logical operator
   * @return clauses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Child clauses if the current clause is a logical operator")

  public List<WorkItemQueryClause> getClauses() {
    return clauses;
  }


  public void setClauses(List<WorkItemQueryClause> clauses) {
    this.clauses = clauses;
  }


  public WorkItemQueryClause field(WorkItemFieldReference field) {
    
    this.field = field;
    return this;
  }

   /**
   * Get field
   * @return field
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemFieldReference getField() {
    return field;
  }


  public void setField(WorkItemFieldReference field) {
    this.field = field;
  }


  public WorkItemQueryClause fieldValue(WorkItemFieldReference fieldValue) {
    
    this.fieldValue = fieldValue;
    return this;
  }

   /**
   * Get fieldValue
   * @return fieldValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemFieldReference getFieldValue() {
    return fieldValue;
  }


  public void setFieldValue(WorkItemFieldReference fieldValue) {
    this.fieldValue = fieldValue;
  }


  public WorkItemQueryClause isFieldValue(Boolean isFieldValue) {
    
    this.isFieldValue = isFieldValue;
    return this;
  }

   /**
   * Determines if this is a field to field comparison
   * @return isFieldValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if this is a field to field comparison")

  public Boolean getIsFieldValue() {
    return isFieldValue;
  }


  public void setIsFieldValue(Boolean isFieldValue) {
    this.isFieldValue = isFieldValue;
  }


  public WorkItemQueryClause logicalOperator(LogicalOperatorEnum logicalOperator) {
    
    this.logicalOperator = logicalOperator;
    return this;
  }

   /**
   * Logical operator separating the condition clause
   * @return logicalOperator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Logical operator separating the condition clause")

  public LogicalOperatorEnum getLogicalOperator() {
    return logicalOperator;
  }


  public void setLogicalOperator(LogicalOperatorEnum logicalOperator) {
    this.logicalOperator = logicalOperator;
  }


  public WorkItemQueryClause operator(WorkItemFieldOperation operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkItemFieldOperation getOperator() {
    return operator;
  }


  public void setOperator(WorkItemFieldOperation operator) {
    this.operator = operator;
  }


  public WorkItemQueryClause value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Right side of the condition when a field to value comparison
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Right side of the condition when a field to value comparison")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemQueryClause workItemQueryClause = (WorkItemQueryClause) o;
    return Objects.equals(this.clauses, workItemQueryClause.clauses) &&
        Objects.equals(this.field, workItemQueryClause.field) &&
        Objects.equals(this.fieldValue, workItemQueryClause.fieldValue) &&
        Objects.equals(this.isFieldValue, workItemQueryClause.isFieldValue) &&
        Objects.equals(this.logicalOperator, workItemQueryClause.logicalOperator) &&
        Objects.equals(this.operator, workItemQueryClause.operator) &&
        Objects.equals(this.value, workItemQueryClause.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clauses, field, fieldValue, isFieldValue, logicalOperator, operator, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemQueryClause {\n");
    sb.append("    clauses: ").append(toIndentedString(clauses)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    fieldValue: ").append(toIndentedString(fieldValue)).append("\n");
    sb.append("    isFieldValue: ").append(toIndentedString(isFieldValue)).append("\n");
    sb.append("    logicalOperator: ").append(toIndentedString(logicalOperator)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

